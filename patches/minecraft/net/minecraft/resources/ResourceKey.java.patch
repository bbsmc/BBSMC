--- a/net/minecraft/resources/ResourceKey.java
+++ b/net/minecraft/resources/ResourceKey.java
@@ -7,8 +_,8 @@
 import java.util.Optional;
 import net.minecraft.core.Registry;
 
-public class ResourceKey<T> {
-   private static final Map<String, ResourceKey<?>> f_135775_ = Collections.synchronizedMap(Maps.newIdentityHashMap());
+public class ResourceKey<T> implements Comparable<ResourceKey<?>> {
+   private static final Map<String, ResourceKey<?>> f_135775_ = Collections.synchronizedMap(Maps.newHashMap()); // CB
    private final ResourceLocation f_135776_;
    private final ResourceLocation f_135777_;
 
@@ -26,11 +_,10 @@
       return m_135790_(Registry.f_122895_, p_135789_);
    }
 
+   @SuppressWarnings("unchecked")
    private static <T> ResourceKey<T> m_135790_(ResourceLocation p_135791_, ResourceLocation p_135792_) {
-      String s = (p_135791_ + ":" + p_135792_).intern();
-      return (ResourceKey<T>)f_135775_.computeIfAbsent(s, (p_195971_) -> {
-         return new ResourceKey(p_135791_, p_135792_);
-      });
+      String s = (p_135791_ + ":" + p_135792_);
+      return (ResourceKey<T>)f_135775_.computeIfAbsent(s, (p_195971_) -> new ResourceKey<>(p_135791_, p_135792_));
    }
 
    private ResourceKey(ResourceLocation p_135780_, ResourceLocation p_135781_) {
@@ -56,5 +_,18 @@
 
    public ResourceLocation m_211136_() {
       return this.f_135776_;
+   }
+
+   public boolean equals(Object o) {
+      if (this == o) return true;
+      if (o == null || getClass() != o.getClass()) return false;
+      return f_135777_.equals(((ResourceKey<?>) o).f_135777_) && f_135776_.equals(((ResourceKey<?>) o).f_135776_);
+   }
+
+   @Override
+   public int compareTo(ResourceKey<?> o) {
+      int ret = this.m_211136_().compareTo(o.m_211136_());
+      if (ret == 0) ret = this.m_135782_().compareTo(o.m_135782_());
+      return ret;
    }
 }
