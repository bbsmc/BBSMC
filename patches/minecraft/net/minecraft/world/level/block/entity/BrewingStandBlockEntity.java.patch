--- a/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.level.block.entity;
 
 import java.util.Arrays;
+import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
@@ -22,6 +_,9 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.BrewingStandBlock;
 import net.minecraft.world.level.block.state.BlockState;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
 
 public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements WorldlyContainer {
    private static final int f_155280_ = 3;
@@ -34,10 +_,10 @@
    public static final int f_155278_ = 1;
    public static final int f_155279_ = 2;
    private NonNullList<ItemStack> f_58975_ = NonNullList.m_122780_(5, ItemStack.f_41583_);
-   int f_58976_;
+   public int f_58976_;
    private boolean[] f_58977_;
    private Item f_58978_;
-   int f_58979_;
+   public int f_58979_;
    protected final ContainerData f_58971_ = new ContainerData() {
       public int m_6413_(int p_59038_) {
          switch (p_59038_) {
@@ -147,6 +_,7 @@
 
    private static boolean m_155294_(NonNullList<ItemStack> p_155295_) {
       ItemStack itemstack = p_155295_.get(3);
+      if (!itemstack.m_41619_()) return net.minecraftforge.common.brewing.BrewingRecipeRegistry.canBrew(p_155295_, itemstack, f_58974_); // divert to VanillaBrewingRegistry
       if (itemstack.m_41619_()) {
          return false;
       } else if (!PotionBrewing.m_43506_(itemstack)) {
@@ -164,21 +_,21 @@
    }
 
    private static void m_155290_(Level p_155291_, BlockPos p_155292_, NonNullList<ItemStack> p_155293_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPotionAttemptBrew(p_155293_)) return;
       ItemStack itemstack = p_155293_.get(3);
 
-      for(int i = 0; i < 3; ++i) {
-         p_155293_.set(i, PotionBrewing.m_43529_(itemstack, p_155293_.get(i)));
-      }
-
-      itemstack.m_41774_(1);
-      if (itemstack.m_41720_().m_41470_()) {
-         ItemStack itemstack1 = new ItemStack(itemstack.m_41720_().m_41469_());
+      net.minecraftforge.common.brewing.BrewingRecipeRegistry.brewPotions(p_155293_, itemstack, f_58974_);
+      net.minecraftforge.event.ForgeEventFactory.onPotionBrewed(p_155293_);
+      if (itemstack.hasCraftingRemainingItem()) {
+         ItemStack itemstack1 = itemstack.getCraftingRemainingItem();
+         itemstack.m_41774_(1);
          if (itemstack.m_41619_()) {
             itemstack = itemstack1;
          } else {
             Containers.m_18992_(p_155291_, (double)p_155292_.m_123341_(), (double)p_155292_.m_123342_(), (double)p_155292_.m_123343_(), itemstack1);
          }
       }
+      else itemstack.m_41774_(1);
 
       p_155293_.set(3, itemstack);
       p_155291_.m_46796_(1035, p_155292_, 0);
@@ -218,6 +_,11 @@
 
    }
 
+   @Override
+   public int m_6893_() {
+      return 0;
+   }
+
    public boolean m_6542_(Player p_59000_) {
       if (this.f_58857_.m_7702_(this.f_58858_) != this) {
          return false;
@@ -228,12 +_,42 @@
 
    public boolean m_7013_(int p_59017_, ItemStack p_59018_) {
       if (p_59017_ == 3) {
-         return PotionBrewing.m_43506_(p_59018_);
+         return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidIngredient(p_59018_);
       } else if (p_59017_ == 4) {
          return p_59018_.m_150930_(Items.f_42593_);
       } else {
-         return (p_59018_.m_150930_(Items.f_42589_) || p_59018_.m_150930_(Items.f_42736_) || p_59018_.m_150930_(Items.f_42739_) || p_59018_.m_150930_(Items.f_42590_)) && this.m_8020_(p_59017_).m_41619_();
+            return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidInput(p_59018_) && this.m_8020_(p_59017_).m_41619_();
       }
+   }
+
+   @Override
+   public List<ItemStack> getContents() {
+      return List.of();
+   }
+
+   @Override
+   public void onOpen(CraftHumanEntity who) {
+
+   }
+
+   @Override
+   public void onClose(CraftHumanEntity who) {
+
+   }
+
+   @Override
+   public List<HumanEntity> getViewers() {
+      return List.of();
+   }
+
+   @Override
+   public void setMaxStackSize(int size) {
+
+   }
+
+   @Override
+   public Location getLocation() {
+      return null;
    }
 
    public int[] m_7071_(Direction p_59010_) {
@@ -258,5 +_,33 @@
 
    protected AbstractContainerMenu m_6555_(int p_58990_, Inventory p_58991_) {
       return new BrewingStandMenu(p_58990_, p_58991_, this, this.f_58971_);
+   }
+
+   net.minecraftforge.common.util.LazyOptional<? extends net.minecraftforge.items.IItemHandler>[] handlers =
+           net.minecraftforge.items.wrapper.SidedInvWrapper.create(this, Direction.UP, Direction.DOWN, Direction.NORTH);
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable Direction facing) {
+      if (capability == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER && facing != null && !this.f_58859_) {
+          return switch (facing) {
+              case UP -> handlers[0].cast();
+              case DOWN -> handlers[1].cast();
+              default -> handlers[2].cast();
+          };
+      }
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   public void invalidateCaps() {
+      super.invalidateCaps();
+      for (int x = 0; x < handlers.length; x++)
+        handlers[x].invalidate();
+   }
+
+   @Override
+   public void reviveCaps() {
+      super.reviveCaps();
+      this.handlers = net.minecraftforge.items.wrapper.SidedInvWrapper.create(this, Direction.UP, Direction.DOWN, Direction.NORTH);
    }
 }
